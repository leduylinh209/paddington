"""
Django settings for paddington project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ["SECRET_KEY"]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # Autocomplete light
    "dal",
    "dal_select2",
    # Admin
    "grappelli",
    # Django
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "django.contrib.flatpages",
    # REST
    "rest_framework",
    "rest_framework.authtoken",
    "rest_auth",
    "corsheaders",
    "reversion",
    "ckeditor",
    "ckeditor_uploader",
    "raven.contrib.django.raven_compat",
    "import_export",
    # Our app
    "account",
    "service.noibaiconnect",
    "service.merchandise",
    "service.store",
    "service.ads",
    "service.facebook",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.contrib.flatpages.middleware.FlatpageFallbackMiddleware",
    "account.middlewares.log_interaction_middleware",
]

CORS_ORIGIN_WHITELIST = (
    "localhost:8100",
    "localhost:8080",
    "my.dev.mebaha.com",
    "my.mebaha.com",
)

ROOT_URLCONF = "paddington.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "paddington.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
]
OLD_PASSWORD_FIELD_ENABLED = True

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Ho_Chi_Minh"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# SSL
# USE_X_FORWARDED_HOST = True
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = "public/"
STATICFILES_DIRS = ["static/"]

MEDIA_URL = "/media/"
MEDIA_ROOT = "media"

REST_AUTH_SERIALIZERS = {
    "LOGIN_SERIALIZER": "account.serializers.MyLoginSerializer",
    "USER_DETAILS_SERIALIZER": "account.serializers.MyUserDetailsSerializer",
}

# DRF
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.TokenAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ),
    "DEFAULT_RENDERER_CLASSES": ("rest_framework.renderers.JSONRenderer",),
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.AllowAny",),
    "DEFAULT_PARSER_CLASSES": ("rest_framework.parsers.JSONParser",),
    "DEFAULT_THROTTLE_CLASSES": (
        "rest_framework.throttling.AnonRateThrottle",
        "rest_framework.throttling.UserRateThrottle",
    ),
    "DEFAULT_THROTTLE_RATES": {"anon": "5/sec", "user": "10/sec"},
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
}


GRAPPELLI_ADMIN_TITLE = "Paddington app"
GRAPPELLI_AUTOCOMPLETE_SEARCH_FIELDS = {
    "merchandise": {
        "product": ("name__icontains", "sku__startswith"),
        "category": ("name__icontains",),
        "country": ("name__icontains",),
        "brand": ("name__icontains",),
        "supplier": ("name__icontains",),
    },
    "auth": {"user": ("username__startswith",),},
}

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.db.DatabaseCache",
        "KEY_FUNCTION": "service.utils.make_key",
        "LOCATION": "cache_table",
    },
}


# Celery
CELERY_QUEUES = {
    "slack_hook": {"exchange": "paddington", "binding_key": "slack_hook",},
    "status_check": {"exchange": "paddington", "binding_key": "status_check",},
    "push_noti": {"exchange": "paddington", "binding_key": "push_noti",},
    "post_signal": {"exchange": "paddington", "binding_key": "post_signal",},
}

# Periodic tasks
CELERY_BEAT_SCHEDULE = {
    "check-noibaiconnect-booking-status": {
        "task": "service.noibaiconnect.tasks.check_booking_status",
        "schedule": 120.0,  # every 2 minutes
    },
}

CELERY_ACCEPT_CONTENT = ["pickle", "json"]
CELERY_DEFAULT_EXCHANGE_TYPE = "direct"


BASE_HOST = "localhost"
NOIBAICONNECT_BOOKING_URL = "http://api.noibaiconnect.com/api/v0/nbc"
NOIBAICONNECT_BOOKING_STATUS_URL = "http://api.noibaiconnect.com/api/v0/map/track"
NOIBAICONNECT_QUOTATION_URL = "http://api.noibaiconnect.com/api/v1/map/price"

SIGNUP_HOOK_URL = (
    ORDER_HOOK_URL
) = "https://hooks.slack.com/services/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"

SITE_ID = 1

# One Signal
ONE_SIGNAL_APP_ID = "a0466c98-e4a8-4f4c-8ba4-a22beb215f26"
ONE_SIGNAL_AUTH_SECRET = "MWM5MGFlOTAtZjU2MC00MDY2LTk4M2ItNmU1ZmJmMTdiOTI0"

# Ckeditor
CKEDITOR_CONFIGS = {
    "default": {
        "toolbar_MyCustom": [
            {
                "name": "document",
                "items": [
                    "Source",
                    "-",
                    "Save",
                    "NewPage",
                    "Preview",
                    "Print",
                    "-",
                    "Templates",
                ],
            },
            {
                "name": "clipboard",
                "items": [
                    "Cut",
                    "Copy",
                    "Paste",
                    "PasteText",
                    "PasteFromWord",
                    "-",
                    "Undo",
                    "Redo",
                ],
            },
            {"name": "editing", "items": ["Find", "Replace", "-", "SelectAll"]},
            {
                "name": "forms",
                "items": [
                    "Form",
                    "Checkbox",
                    "Radio",
                    "TextField",
                    "Textarea",
                    "Select",
                    "Button",
                    "ImageButton",
                    "HiddenField",
                ],
            },
            "/",
            {
                "name": "basicstyles",
                "items": [
                    "Bold",
                    "Italic",
                    "Underline",
                    "Strike",
                    "Subscript",
                    "Superscript",
                    "-",
                    "RemoveFormat",
                ],
            },
            {
                "name": "paragraph",
                "items": [
                    "NumberedList",
                    "BulletedList",
                    "-",
                    "Outdent",
                    "Indent",
                    "-",
                    "Blockquote",
                    "CreateDiv",
                    "-",
                    "JustifyLeft",
                    "JustifyCenter",
                    "JustifyRight",
                    "JustifyBlock",
                    "-",
                    "BidiLtr",
                    "BidiRtl",
                ],
            },
            {
                "name": "links",
                "items": ["Link", "Unlink", "Anchor", "About", "Preview", "Maximize"],
            },
            {
                "name": "insert",
                "items": [
                    "Image",
                    "Embed",
                    "Table",
                    "HorizontalRule",
                    "Smiley",
                    "SpecialChar",
                    "PageBreak",
                    "Iframe",
                ],
            },
            {"name": "styles", "items": ["Styles", "Format", "Font", "FontSize"]},
            {"name": "colors", "items": ["TextColor", "BGColor"]},
            {"name": "tools", "items": ["Maximize", "ShowBlocks"]},
        ],
        "toolbar": "MyCustom",  # put selected toolbar config here
        "tabSpaces": 4,
        "extraPlugins": ",".join(
            [
                "uploadimage",
                "div",
                "autolink",
                "embed",
                "autoembed",
                "embedsemantic",
                "autogrow",
                "widget",
                "lineutils",
                "clipboard",
                "dialog",
                "dialogui",
                "elementspath",
            ]
        ),
        # Disable html encode
        "htmlEncodeOutput": False,
        "entities": False,
        "basicEntities": False,
    }
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {process:d} {thread:d} {message}",
            "style": "{",
        },
        "simple": {"format": "{levelname} {message}", "style": "{",},
    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
        "mail_admins": {
            "level": "ERROR",
            "class": "django.utils.log.AdminEmailHandler",
        },
    },
    "loggers": {
        "django": {"handlers": ["console"], "propagate": True,},
        "django.request": {
            "handlers": ["mail_admins"],
            "level": "ERROR",
            "propagate": False,
        },
        "account": {"handlers": ["console"], "level": "DEBUG",},
    },
}

CKEDITOR_UPLOAD_PATH = "ckeditor/"
CKEDITOR_RESTRICT_BY_DATE = True
CKEDITOR_IMAGE_BACKEND = "pillow"
